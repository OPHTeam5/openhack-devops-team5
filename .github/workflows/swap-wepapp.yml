name: Docker Image CI

on:
  workflow_dispatch:
 # push:
 #  branches: [ main ]
  # pull_request:
  #  branches: [ main ]

env:
  app-name: "openhacktch9q931poi"
  rg-name: "openhacktch9q931rg"


jobs:
  creating_image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      # run: docker build apis/poi/web --file apis/poi/web/Dockerfile --tag my-image-name:$(date +%s)
      run: docker build apis/poi/web --file apis/poi/web/Dockerfile --tag ${{ secrets.ACR_LOGIN_SERVER }}/devopsoh/api-poi:${{ github.run_number }}
    - name: Login to the Container Registry  
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: Push image
      run: |
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/devopsoh/api-poi:${{ github.run_number }}

  deploy-staging:
    needs: creating_image
    runs-on: ubuntu-latest

    environment:
      name: PRE-PROD
      url: ${{ steps.deploywebapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Web App
      id: deploywebapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.app-name }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_STAGING }}
        images: ${{ secrets.ACR_LOGIN_SERVER }}/devopsoh/api-poi:${{ github.run_number }}
        slot-name: 'staging'
  
  checking_staging:
    needs: deploy_staging
    runs-on: ubuntu-latest

    steps:
    - name: Check the deployed service URL
      uses: jtalk/url-health-check-action@v2
      with:
        # Check the following URLs one by one sequentially
        url: https://openhacktch9q931poi-staging.azurewebsites.net/api/healthcheck/poi
        # Follow redirects, or just report success on 3xx status codes
        follow-redirect: false
        # Fail this action after this many failed attempts
        max-attempts: 3
        # Delay between retries
        retry-delay: 5s
        # Retry all errors, including 404. This option might trigger curl upgrade.
        retry-all: false
  
  deploy_prod:
    needs: checking_staging
    runs-on: ubuntu-latest

    environment:
      name: PROD
      url: ${{ steps.slot_swap.outputs.url }}

    steps:
    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Swap staging slot into production
      id: slot_swap
      run: |
        az webapp deployment slot swap -g ${{ env.rg-name }} -n ${{ env.app-name }} -s staging
        url=$(az webapp show -g ${{ env.rg-name }} -n ${{ env.app-name }} --query "defaultHostName" -o tsv)
        echo "::set-output name=url::http://$url"

    - name: az cli logout
      run: az logout